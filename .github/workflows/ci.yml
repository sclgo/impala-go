# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: tests

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  common-ci:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5.3.0
      with:
        go-version: "1.25.x"

    - name: Build
      run: go build -v ./...

    - name: Test
      run: |
        sudo apt-get install moreutils -y
        make test

    - name: Checks
      run: |
        make checks    

    - name: Send coverage
      env:
        COVERALLS_TOKEN: ${{ secrets.COVERALLS_TOKEN }}
      run: go run github.com/mattn/goveralls@latest -coverprofile=./coverage/covprofile -service=github
      continue-on-error: true

    - name: Archive code coverage results
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-report-${{ matrix.go-version }}
        path: ./coverage/coverage.html

  ci-oldgo:
    strategy:
      matrix:
        go-version:
          - 1.23
          - 1.24

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5.3.0
        with:
          go-version: ${{ matrix.go-version }}

      - name: Test
        run: make short-test check-vuln
# check-vuln when testing with old Go ensures that go directive is set to the minimum
# toolchain version without vulnerabilities that impact the code           

  post-merge:
    runs-on: ubuntu-latest
    needs: common-ci
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5.3.0
        with:
          go-version: '1.23'

      - name: Test CLI
        run: make test-cli
